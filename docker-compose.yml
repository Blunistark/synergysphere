services:
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - backend
    environment:
      # talk to backend service inside docker network
      - VITE_API_BASE_URL=http://backend:3000
    networks:
      - synergy-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://synergy_user:synergy_pass@postgres:5432/synergysphere?schema=public
      - JWT_SECRET=your-development-jwt-secret-key-change-in-production
      - JWT_EXPIRES_IN=7d
      # ðŸ‘‡ allow all origins in dev (safer than hardcoding IPs)
      - CORS_ORIGIN=*
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: sh -c "npx prisma migrate deploy &&npm run db:seed && npm run dev"
    networks:
      - synergy-network

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: synergysphere
      POSTGRES_USER: synergy_user
      POSTGRES_PASSWORD: synergy_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/schema.prisma:/docker-entrypoint-initdb.d/schema.prisma
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U synergy_user -d synergysphere"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - synergy-network

volumes:
  postgres_data:

networks:
  synergy-network:
    driver: bridge
